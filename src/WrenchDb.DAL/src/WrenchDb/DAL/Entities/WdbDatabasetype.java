package WrenchDb.DAL.Entities;
// Generated 5-dic-2013 18.23.45 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * WdbDatabasetype generated by hbm2java
 */
@Entity
@Table(name="wdb_databasetype"
    ,schema="public"
)
public class WdbDatabasetype  implements java.io.Serializable {


     private int databasetypeId;
     private String databasetypeName;
     private String databasetypeDeployer;
     private Set<WdbApplication> wdbApplications = new HashSet<WdbApplication>(0);

    public WdbDatabasetype() {
    }

	
    public WdbDatabasetype(int databasetypeId) {
        this.databasetypeId = databasetypeId;
    }
    public WdbDatabasetype(int databasetypeId, String databasetypeName, String databasetypeDeployer, Set<WdbApplication> wdbApplications) {
       this.databasetypeId = databasetypeId;
       this.databasetypeName = databasetypeName;
       this.databasetypeDeployer = databasetypeDeployer;
       this.wdbApplications = wdbApplications;
    }
   
     @Id 
      @Generated(GenerationTime.INSERT)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="databasetype_id", unique=true, nullable=false)
    public int getDatabasetypeId() {
        return this.databasetypeId;
    }
    
    public void setDatabasetypeId(int databasetypeId) {
        this.databasetypeId = databasetypeId;
    }
    
    @Column(name="databasetype_name", length=300)
    public String getDatabasetypeName() {
        return this.databasetypeName;
    }
    
    public void setDatabasetypeName(String databasetypeName) {
        this.databasetypeName = databasetypeName;
    }
    
    @Column(name="databasetype_deployer", length=500)
    public String getDatabasetypeDeployer() {
        return this.databasetypeDeployer;
    }
    
    public void setDatabasetypeDeployer(String databasetypeDeployer) {
        this.databasetypeDeployer = databasetypeDeployer;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="wdbDatabasetype")
    public Set<WdbApplication> getWdbApplications() {
        return this.wdbApplications;
    }
    
    public void setWdbApplications(Set<WdbApplication> wdbApplications) {
        this.wdbApplications = wdbApplications;
    }




}


